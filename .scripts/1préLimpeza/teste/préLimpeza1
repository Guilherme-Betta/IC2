# Importa as bibliotecas necessárias
import pandas as pd
import os # Biblioteca para interagir com o sistema operacional

# --- CONFIGURAÇÃO DE CAMINHOS E ARQUIVOS ---
# 1. COLE O CAMINHO PARA A SUA PASTA DE DADOS AQUI

caminho_da_pasta = "C://Users//gbett//My Drive//Resenha//Programação//Guilherme-Betta//IC2//Dados"

## raw_path = input("Insira o caminho do arquivo: ")
## caminho_da_pasta = raw_path.strip('"').replace('\\', '/')

# 2. NOME DOS ARQUIVOS DE ENTRADA E SAÍDA
nome_do_arquivo_original = 'dataPaperCorrigido.xlsx' 
nome_do_arquivo_limpo = 'dados_de_agua_limpos.csv'

# --- Montando os caminhos completos ---
# os.path.join() junta a pasta e o nome do arquivo de forma inteligente
caminho_completo_original = os.path.join(caminho_da_pasta, nome_do_arquivo_original)
caminho_completo_limpo = os.path.join(caminho_da_pasta, nome_do_arquivo_limpo)


print(f"Iniciando a limpeza do arquivo: {caminho_completo_original}")

# --- CARREGAMENTO DOS DADOS ---
# Tenta carregar o arquivo Excel a partir do caminho completo.
try:
    df = pd.read_excel(caminho_completo_original)
except FileNotFoundError:
    print(f"Erro: O arquivo '{caminho_completo_original}' não foi encontrado. Verifique se o caminho da pasta e o nome do arquivo estão corretos.")
    exit()

# --- DIAGNÓSTICO INICIAL ---
print(f"\nAnálise Inicial:")
print(f"O arquivo original tem {df.shape[0]} linhas e {df.shape[1]} colunas.")

# --- ETAPA 1: REMOÇÃO DE COLUNAS COMPLETAMENTE VAZIAS ---
df_limpo = df.dropna(axis=1, how='all')

colunas_removidas_vazias = df.shape[1] - df_limpo.shape[1]
if colunas_removidas_vazias > 0:
    print(f"  - Foram removidas {colunas_removidas_vazias} colunas que estavam completamente vazias.")
else:
    print(f"  - Nenhuma coluna completamente vazia foi encontrada.")

# --- ETAPA 2: REMOÇÃO DE COLUNAS COM MAIS DE 50% DE DADOS FALTANTES ---
limite_dados_faltantes = len(df_limpo) / 2
colunas_para_remover = []

for coluna in df_limpo.columns:
    quantidade_nulos = df_limpo[coluna].isnull().sum()
    if quantidade_nulos > limite_dados_faltantes:
        colunas_para_remover.append(coluna)

df_limpo = df_limpo.drop(columns=colunas_para_remover)

if len(colunas_para_remover) > 0:
    print(f"  - Foram removidas {len(colunas_para_remover)} colunas com mais de 50% de dados faltantes.")
else:
    print(f"  - Nenhuma coluna adicional foi removida pelo critério de 50% de dados faltantes.")

# --- DIAGNÓSTICO FINAL ---
print(f"\nAnálise Final:")
print(f"O arquivo limpo agora tem {df_limpo.shape[0]} linhas e {df_limpo.shape[1]} colunas.")

# --- SALVANDO O RESULTADO ---
# Salva o DataFrame limpo no caminho completo especificado
df_limpo.to_csv(caminho_completo_limpo, index=False, sep=',', decimal='.')
print(f"\nSucesso! Os dados limpos foram salvos no arquivo '{caminho_completo_limpo}'")